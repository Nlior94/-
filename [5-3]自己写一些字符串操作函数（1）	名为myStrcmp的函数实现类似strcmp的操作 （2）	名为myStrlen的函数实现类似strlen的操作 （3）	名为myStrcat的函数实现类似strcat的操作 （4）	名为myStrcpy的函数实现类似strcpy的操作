//（1）	名为myStrcmp的函数实现类似strcmp的操作
//（2）	名为myStrlen的函数实现类似strlen的操作
//（3）	名为myStrcat的函数实现类似strcat的操作
//（4）	名为myStrcpy的函数实现类似strcpy的操作

//（1）(用指针）
#include <stdio.h>
void myStrcmp(char *ch1[], char *ch2[],int a,int b)
{
	int c = 0;

	if (a > b)
	{
	    c = 1;
	}
	if (a < b)
	{
		c = 1;
	}
	if (a == b)
	{
		for (int i = 0; i < a; i++)
		{
			if (*(ch1 + i) == *(ch2 + i))
			{
				c = 0;
			}
			else
			{
				c = 1;
			}
		}
	}

	if (c == 0)
	{
		printf("这两个字符串相等\n");
	}
	if(c == 1)
	{
		printf("这两个字符串不相等\n");
	}
}

int main()
{
	char ch1[100], ch2[100];
	gets(ch1);
	gets(ch2);

	int a = sizeof(ch1) / sizeof(ch1[0]);
	int b = sizeof(ch2) / sizeof(ch2[0]);

	myStrcmp(ch1, ch2, a, b);

	return 0;
}

//（2）
#include <stdio.h>

int myStrlen(char ch[])
{
	int result = 0;
	int i = 0;
	while (ch[i] != '\0')
	{
		result = result + 1;
		i++;
	}
	return result;
}

int main()
{
	char ch[] = "hello";
	int i = myStrlen(ch);

	printf("%d", i);

	return 0;
}

//（3）
#include <stdio.h>
#include <string.h>

void myStrcat(char ch1[], char ch2[], int n, int m)
{
	for (int a = 0; a < m; a++)
	{
		ch1[n] = ch2[a];
		n++;
	}
}

int main()
{
	char ch1[100] = "That will be a";
	char ch2[] = " good idea!";
	int n = strlen(ch1);
	int m = strlen(ch2);

	myStrcat(ch1, ch2, n, m);

	for (int i = 0; i < strlen(ch1); i++)
	{
		printf("%c", ch1[i]);
	}

	return 0;
}

//（4）
#include <stdio.h>
#include <string.h>

void myStrcpy(char ch1[], char ch2[])
{
	int len = strlen(ch2);
	for (int i = 0; i < len; i++)
	{
		ch1[i] = ch2[i];
	}
}

int main()
{
	char hehe[100] = { 0 };
	char haha[] = "are u ok?";

	myStrcpy(hehe, haha);
	puts(haha);

	return 0;
}
